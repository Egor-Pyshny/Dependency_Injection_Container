using FluentAssertions;
using MPP_5.DIConfig;
using MPP_5.DIContainer;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Tests.HelperClasses;

namespace Tests
{
    public class CommonCreatingTest
    {
        HelperClassForCommon instance;

        [OneTimeSetUp]
        public void SetUp() {
            DependenciesConfiguration dependenciesConfiguration = new DependenciesConfiguration();
            dependenciesConfiguration.Register<TestInterface, HelperClassForCommon>(parameters: new DependencyParameter("parameter","Tested"));
            dependenciesConfiguration.Register<NestedInterface, Impl1>();
            dependenciesConfiguration.Register<NestedInterface, Impl2>(name: "Impl2");
            dependenciesConfiguration.Register<DoubleNestedInterface, Impl3>();
            var provider = new DependencyProvider(dependenciesConfiguration);
            instance = (HelperClassForCommon)provider.Resolve<TestInterface>();
        }

        [Test]
        public void DependencyConstructorTest()
        {
            instance.thisShouldNotBeEmpty.Should().NotBeEmpty();
            instance.autoGenerated.Should().NotBeEmpty();
            instance.thisShouldBeEmpty.Should().Be("");
        }

        [Test]
        public void DependencyKeyAndNestedTypesTest()
        {
            instance.nested.Should().BeOfType<Impl2>();
        }

        [Test]
        public void ConstructorParametersTest()
        {
            instance.thisShouldNotBeEmpty.Should().Be("Tested");
        }
    }
}
